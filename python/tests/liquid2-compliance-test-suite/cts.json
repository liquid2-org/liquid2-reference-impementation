{
  "description": "Liquid2 compliance test suite",
  "tests": [
    {
      "name": "tags, for, range literal",
      "template": "{% for a in (1..3) %}{{ a }},{% endfor %}",
      "data": {},
      "result": "1,2,3,"
    },
    {
      "name": "tags, for, array",
      "template": "{% for a in b %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1,2,3,"
    },
    {
      "name": "tags, for, hash or dict or map",
      "template": "{% for a in b %}{{ a[0] }} {{ a[1] }},{% endfor %}",
      "data": {
        "b": {
          "x": 1,
          "y": 2,
          "z": 3
        }
      },
      "result": "x 1,y 2,z 3,"
    },
    {
      "name": "tags, for, empty array",
      "template": "{% for a in b %}{{ a }},{% endfor %}",
      "data": {
        "b": []
      },
      "result": ""
    },
    {
      "name": "tags, for, empty array with default",
      "template": "{% for a in b %}{{ a }},{% else %}c{% endfor %}",
      "data": {
        "b": []
      },
      "result": "c"
    },
    {
      "name": "tags, for, string",
      "template": "{% for a in '123' %}{{ a }},{% endfor %}",
      "data": {},
      "result": "1,2,3,"
    },
    {
      "name": "tags, for, break",
      "template": "{% for a in b %}{{ a }},{% if a == 2 %}{% break %}{% endif %}{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1,2,"
    },
    {
      "name": "tags, for, continue",
      "template": "{% for a in b %}{% if a == 2 %}{% continue %}{% endif %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1,3,"
    },
    {
      "name": "tags, for, array, limit, colon",
      "template": "{% for a in b limit:3 %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "1,2,3,"
    },
    {
      "name": "tags, for, array, limit, equals",
      "template": "{% for a in b limit=3 %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "1,2,3,"
    },
    {
      "name": "tags, for, array, offset, colon",
      "template": "{% for a in b offset:2 %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "3,4,5,"
    },
    {
      "name": "tags, for, array, offset, equals",
      "template": "{% for a in b offset=2 %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "3,4,5,"
    },
    {
      "name": "tags, for, array, reversed",
      "template": "{% for a in b reversed %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "3,2,1,"
    },
    {
      "name": "tags, for, comma separated arguments",
      "template": "{% for a in b offset:1, limit:3, reversed %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "4,3,2,"
    },
    {
      "name": "tags, for, space separated arguments",
      "template": "{% for a in b offset:1 limit:3 reversed %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "4,3,2,"
    },
    {
      "name": "tags, for, reversed is first",
      "template": "{% for a in b reversed offset:1, limit:3 %}{{ a }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "4,3,2,"
    },
    {
      "name": "tags, for, length",
      "template": "{% for a in b %}{{ a }} {{ forloop.length }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 3,2 3,3 3,"
    },
    {
      "name": "tags, for, length, limit",
      "template": "{% for a in b limit:3 %}{{ a }} {{ forloop.length }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "1 3,2 3,3 3,"
    },
    {
      "name": "tags, for, length, offset",
      "template": "{% for a in b offset:2 %}{{ a }} {{ forloop.length }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5
        ]
      },
      "result": "3 3,4 3,5 3,"
    },
    {
      "name": "tags, for, first",
      "template": "{% for a in b %}{{ a }} {{ forloop.first }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 true,2 false,3 false,"
    },
    {
      "name": "tags, for, first, offset",
      "template": "{% for a in b offset:1 %}{{ a }} {{ forloop.first }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "2 true,3 false,"
    },
    {
      "name": "tags, for, last",
      "template": "{% for a in b %}{{ a }} {{ forloop.last }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 false,2 false,3 true,"
    },
    {
      "name": "tags, for, last, limit",
      "template": "{% for a in b limit:2 %}{{ a }} {{ forloop.last }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 false,2 true,"
    },
    {
      "name": "tags, for, index",
      "template": "{% for a in b %}{{ a }} {{ forloop.index }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 1,2 2,3 3,"
    },
    {
      "name": "tags, for, index0",
      "template": "{% for a in b %}{{ a }} {{ forloop.index0 }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 0,2 1,3 2,"
    },
    {
      "name": "tags, for, rindex",
      "template": "{% for a in b %}{{ a }} {{ forloop.rindex }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 3,2 2,3 1,"
    },
    {
      "name": "tags, for, rindex0",
      "template": "{% for a in b %}{{ a }} {{ forloop.rindex0 }},{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 2,2 1,3 0,"
    },
    {
      "name": "tags, for, name",
      "template": "{% for a in b limit:1 %}{{ forloop.name }}{% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "a-$['b']"
    },
    {
      "name": "tags, for, name, range",
      "template": "{% for a in (1..3) limit:1 %}{{ forloop.name }}{% endfor %}",
      "data": {},
      "result": "a-(1..3)"
    },
    {
      "name": "tags, for, forloop goes out of scope",
      "template": "{% for a in b %}{{ a }} {{ forloop.length }},{% endfor %}{{ forloop.length }}",
      "data": {
        "b": [
          1,
          2,
          3
        ]
      },
      "result": "1 3,2 3,3 3,"
    },
    {
      "name": "tags, for, iterate nested path",
      "template": "{% for link in linklists[section.settings.menu].links %}{{ link }} {% endfor %}",
      "data": {
        "linklists": {
          "main": {
            "links": [
              "1",
              "2"
            ]
          }
        },
        "section": {
          "settings": {
            "menu": "main"
          }
        }
      },
      "result": "1 2 "
    },
    {
      "name": "tags, for, offset, continue",
      "template": "{% for a in b limit:3 %}a{{ a }} {% endfor %}{% for a in b offset:continue %}b{{ a }} {% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "result": "a1 a2 a3 b4 b5 b6 "
    },
    {
      "name": "tags, for, offset, continue, range",
      "template": "{% for a in (1..6) limit:3 %}a{{ a }} {% endfor %}{% for a in (1..6) offset:continue %}b{{ a }} {% endfor %}",
      "data": {},
      "result": "a1 a2 a3 b4 b5 b6 "
    },
    {
      "name": "tags, for, offset, continue, assigned range",
      "template": "{% assign b = (1..6) %}{% for a in b limit:3 %}a{{ a }} {% endfor %}{% for a in b offset:continue %}b{{ a }} {% endfor %}",
      "data": {},
      "result": "a1 a2 a3 b4 b5 b6 "
    },
    {
      "name": "tags, for, offset, continue, reassigned array",
      "template": "{% assign b = '1,2,3,4,5,6' | split: ',' %}{% for a in b limit:3 %}{{ a }} {% endfor %}{% assign b = 'u,v,w,x,y,z' | split: ',' %}{% for a in b offset:continue %}{{ a }} {% endfor %}",
      "data": {},
      "result": "1 2 3 x y z "
    },
    {
      "name": "tags, for, offset, continue, different loop variable",
      "template": "{% for a in b limit:3 %}a{{ a }} {% endfor %}{% for x in b offset:continue %}b{{ x }} {% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "result": "a1 a2 a3 b1 b2 b3 b4 b5 b6 "
    },
    {
      "name": "tags, for, offset, continue, nothing to continue from",
      "template": "{% for a in b %}a{{ a }} {% endfor %}{% for a in b offset:continue %}b{{ a }} {% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "result": "a1 a2 a3 a4 a5 a6 "
    },
    {
      "name": "tags, for, offset, continue, no preceding loop",
      "template": "{% for a in b offset:continue %}{{ a }} {% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "result": "1 2 3 4 5 6 "
    },
    {
      "name": "tags, for, offset, continue, twice",
      "template": "{% for a in b limit:2 %}a{{ a }} {% endfor %}{% for a in b offset:continue limit: 2 %}b{{ a }} {% endfor %}{% for a in b offset:continue %}c{{ a }} {% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "result": "a1 a2 b3 b4 c5 c6 "
    },
    {
      "name": "tags, for, offset, continue, broken",
      "template": "{% for a in b limit:4 %}{% if a == 3 %}{% break %}{% endif %}a{{ a }} {% endfor %}{% for a in b offset:continue limit: 2 %}b{{ a }} {% endfor %}{% for a in b offset:continue %}c{{ a }} {% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "result": "a1 a2 b5 b6 "
    },
    {
      "name": "tags, for, offset, continue, forloop length",
      "template": "{% for a in b limit: 2 %}a{{ a }}-{{ forloop.length }} {% endfor %}{% for a in b offset:continue %}b{{ a }}-{{ forloop.length }} {% endfor %}",
      "data": {
        "b": [
          1,
          2,
          3,
          4,
          5,
          6
        ]
      },
      "result": "a1-2 a2-2 b3-4 b4-4 b5-4 b6-4 "
    },
    {
      "name": "tags, assign, string literal",
      "template": "{% assign a = 'b' %}{{ a }}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, assign, integer literal",
      "template": "{% assign a = 123 %}{{ a }}",
      "data": {},
      "result": "123"
    },
    {
      "name": "tags, assign, float literal",
      "template": "{% assign a = 1.23 %}{{ a }}",
      "data": {},
      "result": "1.23"
    },
    {
      "name": "tags, assign, range literal",
      "template": "{% assign a = (1..3) %}{{ a | join: '#' }}",
      "data": {},
      "result": "1#2#3"
    },
    {
      "name": "tags, assign, simple query",
      "template": "{% assign a = b %}{{ a }}",
      "data": {
        "b": "c"
      },
      "result": "c"
    },
    {
      "name": "tags, assign, query, nested object",
      "template": "{% assign a = b.c %}{{ a }}",
      "data": {
        "b": {
          "c": "d"
        }
      },
      "result": "d"
    },
    {
      "name": "tags, assign, query, nested array element",
      "template": "{% assign a = b.c[1] %}{{ a }}",
      "data": {
        "b": {
          "c": [
            1,
            2,
            3
          ]
        }
      },
      "result": "2"
    },
    {
      "name": "tags, assign, string literal containing an end tag delimiter",
      "template": "{% assign a = 'foo%}bar' %}{{ a }}",
      "data": {},
      "result": "foo%}bar"
    },
    {
      "name": "tags, assign, string literal containing a start output delimiter",
      "template": "{% assign a = 'foo{{bar' %}{{ a }}",
      "data": {},
      "result": "foo{{bar"
    },
    {
      "name": "tags, assign, shadow global variable",
      "template": "{{ a }}{% assign a = 'c' %}{{ a }}",
      "data": {
        "a": "b"
      },
      "result": "bc"
    },
    {
      "name": "tags, assign, string literal, filtered",
      "template": "{% assign a = 'b' | upcase %}{{ a }}",
      "data": {},
      "result": "B"
    },
    {
      "name": "tags, assign, ternary expression, truthy",
      "template": "{% assign a = 'b' if true else 'c' %}{{ a }}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, assign, ternary expression, falsy",
      "template": "{% assign a = 'b' if false else 'c' %}{{ a }}",
      "data": {},
      "result": "c"
    },
    {
      "name": "tags, assign, ternary expression, truthy filter",
      "template": "{% assign a = 'b' | upcase if true else 'c' %}{{ a }}",
      "data": {},
      "result": "B"
    },
    {
      "name": "tags, assign, ternary expression, falsy filter",
      "template": "{% assign a = 'b' if false else 'c' | upcase %}{{ a }}",
      "data": {},
      "result": "C"
    },
    {
      "name": "tags, assign, ternary expression, truthy, falsy filter",
      "template": "{% assign a = 'b' if true else 'c' | upcase %}{{ a }}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, assign, ternary expression, falsy, truthy filter",
      "template": "{% assign a = 'b' | upcase if false else 'c' %}{{ a }}",
      "data": {},
      "result": "c"
    },
    {
      "name": "tags, assign, ternary expression, tail filter",
      "template": "{% assign a = 'b' if true else 'c' || upcase %}{{ a }}",
      "data": {},
      "result": "B"
    },
    {
      "name": "tags, assign, missing assignment operator",
      "template": "{% assign a 'b' %}",
      "invalid": true
    },
    {
      "name": "tags, assign, missing expression",
      "template": "{% assign a = %}",
      "invalid": true
    },
    {
      "name": "tags, unless, literal true, no alternative",
      "template": "{% unless true %}a{% endunless %}",
      "data": {},
      "result": ""
    },
    {
      "name": "tags, unless, literal false",
      "template": "{% unless false %}a{% endunless %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, unless, literal true, alternative",
      "template": "{% unless true %}a{% else %}b{% endunless %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, unless, literal true, truthy alternative",
      "template": "{% unless true %}a{% elsif true %}b{% endunless %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, unless, literal true, falsy alternative",
      "template": "{% unless true %}a{% elsif false %}b{% endunless %}",
      "data": {},
      "result": ""
    },
    {
      "name": "tags, unless, literal true, falsy alternative, final alternative",
      "template": "{% unless true %}a{% elsif false %}b{% else %}c{% endunless %}",
      "data": {},
      "result": "c"
    },
    {
      "name": "tags, unless, missing whitespace after tag name",
      "template": "{% unlesstrue %}a{% endunless %}",
      "invalid": true
    },
    {
      "name": "tags, unless, no whitespace before tag name",
      "template": "{%unless false %}a{% endunless %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, unless, no whitespace after expression",
      "template": "{% unless false%}a{% endunless %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, unless, extra else block",
      "template": "{% unless true %}a{% else %}b{% else %}c{% endunless %}",
      "invalid": true
    },
    {
      "name": "tags, unless, extra elsif block",
      "template": "{% unless true %}a{% else %}b{% elsif true %}c{% endunless %}",
      "invalid": true
    },
    {
      "name": "tags, if, literal true",
      "template": "{% if true %}a{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, literal false, no alternative",
      "template": "{% if false %}a{% endif %}",
      "data": {},
      "result": ""
    },
    {
      "name": "tags, if, literal false, alternative",
      "template": "{% if false %}a{% else %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, literal false, truthy alternative",
      "template": "{% if false %}a{% elsif true %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, literal false, falsy alternative",
      "template": "{% if false %}a{% elsif false %}b{% endif %}",
      "data": {},
      "result": ""
    },
    {
      "name": "tags, if, literal false, falsy alternative, final alternative",
      "template": "{% if false %}a{% elsif false %}b{% else %}c{% endif %}",
      "data": {},
      "result": "c"
    },
    {
      "name": "tags, if, equality, truthy, strings",
      "template": "{% if a == 'b' %}c{% endif %}",
      "data": {
        "a": "b"
      },
      "result": "c"
    },
    {
      "name": "tags, if, equality, falsy, strings",
      "template": "{% if a == 'x' %}c{% endif %}",
      "data": {
        "a": "b"
      },
      "result": ""
    },
    {
      "name": "tags, if, equality, truthy, integers",
      "template": "{% if a == 1 %}b{% endif %}",
      "data": {
        "a": 1
      },
      "result": "b"
    },
    {
      "name": "tags, if, equality, falsy, integers",
      "template": "{% if a == 1 %}b{% endif %}",
      "data": {
        "a": 2
      },
      "result": ""
    },
    {
      "name": "tags, if, equality, truthy, floats",
      "template": "{% if a == 1.1 %}b{% endif %}",
      "data": {
        "a": 1.1
      },
      "result": "b"
    },
    {
      "name": "tags, if, equality, falsy, floats",
      "template": "{% if a == 1.2 %}b{% endif %}",
      "data": {
        "a": 1.0
      },
      "result": ""
    },
    {
      "name": "tags, if, equality, truthy, float and integer",
      "template": "{% if a == 1 %}b{% endif %}",
      "data": {
        "a": 1.0
      },
      "result": "b"
    },
    {
      "name": "tags, if, equality, falsy, float and integer",
      "template": "{% if a == 1 %}b{% endif %}",
      "data": {
        "a": 1.1
      },
      "result": ""
    },
    {
      "name": "tags, if, less than, truthy, integers",
      "template": "{% if a < 10 %}b{% endif %}",
      "data": {
        "a": 5
      },
      "result": "b"
    },
    {
      "name": "tags, if, less than, falsy, integers",
      "template": "{% if a < 10 %}b{% endif %}",
      "data": {
        "a": 20
      },
      "result": ""
    },
    {
      "name": "tags, if, less than, truthy, floats",
      "template": "{% if a < 10.1 %}b{% endif %}",
      "data": {
        "a": 5.1
      },
      "result": "b"
    },
    {
      "name": "tags, if, less than, falsy, floats",
      "template": "{% if a < 10.1 %}b{% endif %}",
      "data": {
        "a": 20.1
      },
      "result": ""
    },
    {
      "name": "tags, if, less than, truthy, strings",
      "template": "{% if 'abc' < 'acb' %}x{% endif %}",
      "data": {},
      "result": "x"
    },
    {
      "name": "tags, if, less than, falsy, strings",
      "template": "{% if 'bbb' < 'aaa' %}x{% else %}y{% endif %}",
      "data": {},
      "result": "y"
    },
    {
      "name": "tags, if, non-empty hash or dict or map is truthy",
      "template": "{% if a %}d{% endif %}",
      "data": {
        "a": {
          "b": "c"
        }
      },
      "result": "d"
    },
    {
      "name": "tags, if, literal null is falsy",
      "template": "{% if null %}a{% else %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, literal nil is falsy",
      "template": "{% if nil %}a{% else %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, undefined variables are falsy",
      "template": "{% if nosuchthing %}a{% else %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, undefined variables are equal to null",
      "template": "{% if nosuchthing == null %}a{% else %}b{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, nested, truthy",
      "template": "{% if true %}a{% if true %}b{% endif %}{% else %}c{% endif %}",
      "data": {},
      "result": "ab"
    },
    {
      "name": "tags, if, nested, falsy",
      "template": "{% if true %}a{% if false %}b{% endif %}{% else %}c{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, contains, truthy, array of integers",
      "template": "{% if a contains 1 %}b{% endif %}",
      "data": {
        "a": [
          1,
          2,
          3
        ]
      },
      "result": "b"
    },
    {
      "name": "tags, if, contains, falsy, array of integers",
      "template": "{% if a contains 5 %}b{% else %}c{% endif %}",
      "data": {
        "a": [
          1,
          2,
          3
        ]
      },
      "result": "c"
    },
    {
      "name": "tags, if, in, truthy, array of integers",
      "template": "{% if 1 in a %}b{% else %}c{% endif %}",
      "data": {
        "a": [
          1,
          2,
          3
        ]
      },
      "result": "b"
    },
    {
      "name": "tags, if, in, falsy, array of integers",
      "template": "{% if 5 in a %}b{% else %}c{% endif %}",
      "data": {
        "a": [
          1,
          2,
          3
        ]
      },
      "result": "c"
    },
    {
      "name": "tags, if, contains, truthy, strings",
      "template": "{% if 'foobar' contains 'oob' %}a{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, contains, falsy, strings",
      "template": "{% if 'foobar' contains 'baz' %}b{% else %}c{% endif %}",
      "data": {},
      "result": "c"
    },
    {
      "name": "tags, if, contains, string and integer",
      "template": "{% if 'foo2bar' contains 2 %}a{% else %}b{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, in, truthy, strings",
      "template": "{% if 'oob' in 'foobar' %}b{% else %}c{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, in, falsy, strings",
      "template": "{% if 'baz' in 'foobar' %}b{% else %}c{% endif %}",
      "data": {},
      "result": "c"
    },
    {
      "name": "tags, if, contains, truthy, hash or dict or map",
      "template": "{% if a contains 'b' %}c{% endif %}",
      "data": {
        "a": {
          "b": false
        }
      },
      "result": "c"
    },
    {
      "name": "tags, if, contains, falsy, hash or dict or map",
      "template": "{% if a contains 'b' %}c{% else %}d{% endif %}",
      "data": {
        "a": {
          "e": true
        }
      },
      "result": "d"
    },
    {
      "name": "tags, if, in, truthy, hash or dict or map",
      "template": "{% if 'a' in b %}c{% else %}d{% endif %}",
      "data": {
        "b": {
          "a": false
        }
      },
      "result": "c"
    },
    {
      "name": "tags, if, in, falsy, hash or dict or map",
      "template": "{% if 'a' in b %}c{% else %}d{% endif %}",
      "data": {
        "b": {
          "e": true
        }
      },
      "result": "d"
    },
    {
      "name": "tags, if, not equal, truthy, strings",
      "template": "{% if a != 'b' %}c{% endif %}",
      "data": {
        "a": "d"
      },
      "result": "c"
    },
    {
      "name": "tags, if, not equal, falsy, strings",
      "template": "{% if a != 'x' %}c{% else %}d{% endif %}",
      "data": {
        "a": "x"
      },
      "result": "d"
    },
    {
      "name": "tags, if, not equal, alternative operator",
      "template": "{% if a <> 'b' %}c{% endif %}",
      "data": {
        "a": "d"
      },
      "result": "c"
    },
    {
      "name": "tags, if, empty string is truthy",
      "template": "{% if '' %}a{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, empty array is truthy",
      "template": "{% if a %}b{% endif %}",
      "data": {
        "a": []
      },
      "result": "b"
    },
    {
      "name": "tags, if, empty array is equal to special empty",
      "template": "{% if a == empty %}b{% endif %}",
      "data": {
        "a": []
      },
      "result": "b"
    },
    {
      "name": "tags, if, empty hash or dict or map is equal to special empty",
      "template": "{% if a == empty %}b{% endif %}",
      "data": {
        "a": {}
      },
      "result": "b"
    },
    {
      "name": "tags, if, empty string is equal to special empty",
      "template": "{% if a == empty %}b{% endif %}",
      "data": {
        "a": ""
      },
      "result": "b"
    },
    {
      "name": "tags, if, empty string is equal to special blank",
      "template": "{% if a == blank %}b{% endif %}",
      "data": {
        "a": ""
      },
      "result": "b"
    },
    {
      "name": "tags, if, whitespace only string is equal to special blank",
      "template": "{% if '  ' == blank %}a{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, equality, range literal",
      "template": "{% assign a = (1..3) %}{% if a == (1..3) %}a{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, equality, arrays",
      "template": "{% assign a = 'a,b,c' | split: ',' %}{% if a == b %}c{% endif %}",
      "data": {
        "b": [
          "a",
          "b",
          "c"
        ]
      },
      "result": "c"
    },
    {
      "name": "tags, if, equality, string and integer",
      "template": "{% if 1 == '1' %}a{% else %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, greater than, string and integer",
      "template": "{% if 2 > '1' %}a{% else %}b{% endif %}",
      "invalid": true
    },
    {
      "name": "tags, if, logical not, false literal",
      "template": "{% if not false %}a{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, logical not, true literal",
      "template": "{% if not true %}a{% else %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, logical and binds more tightly than or",
      "template": "{% if true and false and false or true %}a{% else %}b{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, group terms with parentheses",
      "template": "{% if (true and (false and (false or true))) %}a{% else %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, unbalanced parentheses",
      "template": "{% if true and (false and true %}a{% else %}b{% endif %}",
      "invalid": true
    },
    {
      "name": "tags, if, more unbalanced parentheses",
      "template": "{% if (true and (false and (false or true)) %}a{% else %}b{% endif %}",
      "invalid": true
    },
    {
      "name": "tags, if, zero is not equal to false",
      "template": "{% if 0 == false %}a{% else %}b{% endif %}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, if, zero is truthy",
      "template": "{% if 0 %}a{% else %}b{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, float zero is truthy",
      "template": "{% if 0.0 %}a{% else %}b{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, missing whitespace after tag name",
      "template": "{% iftrue %}a{% endif %}",
      "invalid": true
    },
    {
      "name": "tags, if, no whitespace before tag name",
      "template": "{%if true %}a{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, no whitespace after expression",
      "template": "{% if true%}a{% endif %}",
      "data": {},
      "result": "a"
    },
    {
      "name": "tags, if, extra else block",
      "template": "{% if false %}a{% else %}b{% else %}c{% endif %}",
      "invalid": true
    },
    {
      "name": "tags, if, extra elsif block",
      "template": "{% if false %}a{% else %}b{% elsif true %}c{% endif %}",
      "invalid": true
    },
    {
      "name": "tags, capture, content with global variables",
      "template": "{% capture a %}Hello, {{ b }}!{% endcapture %}{{ a }}",
      "data": {
        "b": "you"
      },
      "result": "Hello, you!"
    },
    {
      "name": "tags, capture, into identifier containing a hyphen",
      "template": "{% capture a-b %}Hello, {{ c }}!{% endcapture %}{{ a-b }}",
      "data": {
        "c": "you"
      },
      "result": "Hello, you!"
    },
    {
      "name": "tags, capture, empty block",
      "template": "{% capture a %}{% endcapture %}{{ a }}",
      "data": {},
      "result": ""
    },
    {
      "name": "tags, capture, empty block, end of input",
      "template": "{% capture a %}{% endcapture %}",
      "data": {},
      "result": ""
    }
  ]
}