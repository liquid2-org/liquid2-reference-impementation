{
  "description": "Liquid2 compliance test suite",
  "tests": [
    {
      "name": "tags, assign, string literal",
      "template": "{% assign a = 'b' %}{{ a }}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, assign, integer literal",
      "template": "{% assign a = 123 %}{{ a }}",
      "data": {},
      "result": "123"
    },
    {
      "name": "tags, assign, float literal",
      "template": "{% assign a = 1.23 %}{{ a }}",
      "data": {},
      "result": "1.23"
    },
    {
      "name": "tags, assign, range literal",
      "template": "{% assign a = (1..3) %}{{ a | join: '#' }}",
      "data": {},
      "result": "1#2#3"
    },
    {
      "name": "tags, assign, simple query",
      "template": "{% assign a = b %}{{ a }}",
      "data": {
        "b": "c"
      },
      "result": "c"
    },
    {
      "name": "tags, assign, query, nested object",
      "template": "{% assign a = b.c %}{{ a }}",
      "data": {
        "b": {
          "c": "d"
        }
      },
      "result": "d"
    },
    {
      "name": "tags, assign, query, nested array element",
      "template": "{% assign a = b.c[1] %}{{ a }}",
      "data": {
        "b": {
          "c": [
            1,
            2,
            3
          ]
        }
      },
      "result": "2"
    },
    {
      "name": "tags, assign, string literal containing an end tag delimiter",
      "template": "{% assign a = 'foo%}bar' %}{{ a }}",
      "data": {},
      "result": "foo%}bar"
    },
    {
      "name": "tags, assign, string literal containing a start output delimiter",
      "template": "{% assign a = 'foo{{bar' %}{{ a }}",
      "data": {},
      "result": "foo{{bar"
    },
    {
      "name": "tags, assign, shadow global variable",
      "template": "{{ a }}{% assign a = 'c' %}{{ a }}",
      "data": {
        "a": "b"
      },
      "result": "bc"
    },
    {
      "name": "tags, assign, string literal, filtered",
      "template": "{% assign a = 'b' | upcase %}{{ a }}",
      "data": {},
      "result": "B"
    },
    {
      "name": "tags, assign, ternary expression, truthy",
      "template": "{% assign a = 'b' if true else 'c' %}{{ a }}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, assign, ternary expression, falsy",
      "template": "{% assign a = 'b' if false else 'c' %}{{ a }}",
      "data": {},
      "result": "c"
    },
    {
      "name": "tags, assign, ternary expression, truthy filter",
      "template": "{% assign a = 'b' | upcase if true else 'c' %}{{ a }}",
      "data": {},
      "result": "B"
    },
    {
      "name": "tags, assign, ternary expression, falsy filter",
      "template": "{% assign a = 'b' if false else 'c' | upcase %}{{ a }}",
      "data": {},
      "result": "C"
    },
    {
      "name": "tags, assign, ternary expression, truthy, falsy filter",
      "template": "{% assign a = 'b' if true else 'c' | upcase %}{{ a }}",
      "data": {},
      "result": "b"
    },
    {
      "name": "tags, assign, ternary expression, falsy, truthy filter",
      "template": "{% assign a = 'b' | upcase if false else 'c' %}{{ a }}",
      "data": {},
      "result": "c"
    },
    {
      "name": "tags, assign, ternary expression, tail filter",
      "template": "{% assign a = 'b' if true else 'c' || upcase %}{{ a }}",
      "data": {},
      "result": "B"
    },
    {
      "name": "tags, assign, missing assignment operator",
      "template": "{% assign a 'b' %}",
      "invalid": true
    },
    {
      "name": "tags, assign, missing expression",
      "template": "{% assign a = %}",
      "invalid": true
    }
  ]
}